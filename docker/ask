#!/usr/bin/python3 -W ignore::DeprecationWarning
# -*- coding:utf8 -*-

import sys
import logging
from Asking.t5_small import T5SmallQuestionGenerator
from Asking.t5_boolean import YesNoQuestionGenerator

logging.basicConfig(level=logging.CRITICAL)
from Asking.advance_qg import QuestionGenerator
from Asking.advance_qg import print_qa

if __name__ == '__main__':
    input_file = sys.argv[1]
    N = int(sys.argv[2])
    N_A = int(N / 3)
    N_small = int(N / 3)
    N_yesNo = N - N_small - N_A
    # print("1")
    # with open('output.txt', 'w') as f:
    #     print("small")
    #     sys.stdout = f
    #     qg_small = T5SmallQuestionGenerator(input_file, N_small)
    #     small_questions = qg_small.generate_questions()
    #
    #     with open(input_file, encoding="UTF-8") as a:
    #         article = a.read()
    #     print("yes")
    #     if N_yesNo > 0:
    #         print("3")
    #         qg_yesNo = YesNoQuestionGenerator(article, N_yesNo)
    #         print("4")
    #         yesNo_questions = qg_yesNo.generate()
    #     print("QG")
    #     if N_A>0:
    #         qg = QuestionGenerator()
    #         qa_list = qg.generate(
    #             article,
    #             num_questions=N_A,
    #             answer_style='sentences'
    #         )
    #
    #     sys.stdout = sys.__stdout__
    #
    # # qg_small = T5SmallQuestionGenerator(input_file, N_small)
    # # small_questions = qg_small.generate_questions()
    # #
    # # with open(input_file, encoding="UTF-8") as a:
    # #     article = a.read()
    # #
    # # if N_yesNo > 0:
    # #     qg_yesNo = YesNoQuestionGenerator(article, N_yesNo)
    # #     yesNo_questions = qg_yesNo.generate()
    # #
    # # if N_A > 0:
    # #     qg = QuestionGenerator()
    # #     qa_list = qg.generate(
    # #         article,
    # #         num_questions=N_A,
    # #         answer_style='sentences'
    # #     )
    # #
    # # print t5 small dataset
    # for question in small_questions:
    #     print(f'{question}')
    #
    # # print yes or no dataset
    # for question in yesNo_questions:
    #     print(f'{question}')
    #
    # # print qa
    # print_qa(qa_list, show_answers=False)

    with open(input_file, encoding="UTF-8") as a:
        article = a.read()
    print("yes no")
    qg = YesNoQuestionGenerator(article, N)
    print("output")
    output = qg.generate()
    print("finally")
    for out in output:
        print(out)

    # with open(input_file, encoding="UTF-8") as a:
    #     article = a.read()
    # qg = QuestionGenerator()
    # qa_list = qg.generate(
    #     article,
    #     num_questions=10,
    #     answer_style='sentences'
    # )
    # print_qa(qa_list, show_answers=False)
